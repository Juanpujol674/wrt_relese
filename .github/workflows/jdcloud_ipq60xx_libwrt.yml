name: jdcloud_ipq60xx_libwrt

on:
  schedule:
    - cron: "0 23 * * *"
  workflow_dispatch: {}

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Free Disk Space
        uses: FirelightFlagboy/gh-runner-free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo bash -c 'bash <(curl -sL https://build-scripts.immortalwrt.org/init_build_environment.sh)'
          sudo -E apt -yqq install dos2unix libfuse-dev libtool-bin autoconf automake
          sudo -E apt -yqq autoremove --purge
          sudo -E apt -yqq clean
          sudo -E systemctl daemon-reload
          sudo -E timedatectl set-timezone "Asia/Shanghai"

      - name: Initialization Values
        run: |
          export BUILD_DATE=$(TZ=UTC-8 date +"%y.%m.%d_%H.%M.%S_jdcloud_ipq60xx_libwrt")
          echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV
          export BUILD_SRC=$(awk -F"=" '/REPO_URL/ {print $NF}' "./compilecfg/jdcloud_ipq60xx_libwrt.ini")
          echo "BUILD_SRC=$BUILD_SRC" >> $GITHUB_ENV

      - name: Pre Clone
        run: ./pre_clone_action.sh jdcloud_ipq60xx_libwrt

      - name: Cache OpenWrt Source
        uses: actions/cache@v4
        with:
          path: ./action_build
          key: ${{ runner.os }}-openwrt-source-${{ hashFiles('compilecfg/jdcloud_ipq60xx_libwrt.ini') }}-v5

      - name: Fix libdeflate Download URL and Hash (关键修复)
        run: |
          # 恢复原始下载链接并修正哈希值
          sed -i 's|PKG_SOURCE_URL:=.*|PKG_SOURCE_URL:=https://github.com/ebiggers/libdeflate/releases/download/v1.22/|' ./action_build/tools/libdeflate/Makefile
          sed -i 's|PKG_HASH:=.*|PKG_HASH:=7834d9adbc9a809e0fb0d7b486060a9ae5f7819eb7f55bb8c22b10d7b3bed8da|' ./action_build/tools/libdeflate/Makefile

      - name: Pre-download libdeflate
        run: |
          mkdir -p ./action_build/dl
          wget --tries=3 --timeout=30 https://github.com/ebiggers/libdeflate/releases/download/v1.22/libdeflate-1.22.tar.gz -O ./action_build/dl/libdeflate-1.22.tar.gz
          echo "7834d9adbc9a809e0fb0d7b486060a9ae5f7819eb7f55bb8c22b10d7b3bed8da  ./action_build/dl/libdeflate-1.22.tar.gz" | sha256sum -c

      - name: Patch Compilation Flags
        run: |
          find ./action_build -type f \( -name "Makefile" -o -name "*.mk" \) -exec sed -i 's/-Werror=format-security//g' {} \;
          echo "CONFIG_TARGET_OPTIMIZATION=\"-O2 -pipe -mcpu=cortex-a53\"" >> ./action_build/.config

      - name: Update Feeds and Force Install
        run: |
          cd ./action_build
          ./scripts/feeds update -a
          ./scripts/feeds install -a --force

      - name: Build Firmware
        run: |
          cd action_build
          make clean
          make defconfig
          make -j2 V=s EXTRA_CFLAGS="-Wno-error=format-security"

      - name: Release Firmware
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.BUILD_DATE }}
          name: ${{ env.BUILD_DATE }}
          files: ${{ inputs.model == 'n1_immwrt' && env.PACKAGED_OUTPUTPATH || './firmware' }}/*.*
          body_path: ./release_body.txt
